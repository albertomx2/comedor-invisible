version: '3.9'

services:
# ──────────────────────────────────────────────────────────
  backend:
    build: ./backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --config gunicorn_config.py core.wsgi:application"
    env_file: .env
    volumes:
      - ./backend:/app
      - static_volume:/app/static/
    depends_on:
      - timescaledb
      - kafka
    expose:
      - "8000"

# ──────────────────────────────────────────────────────────
  timescaledb:
    image: timescale/timescaledb-ha:pg17
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

# ──────────────────────────────────────────────────────────
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

# ──────────────────────────────────────────────────────────
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - static_volume:/var/www/static/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - backend

volumes:
  static_volume:
  pgdata:
